% fprintf(yaml,'# %s parameters\n', cameraInfo.host);
% fprintf(yaml,'# SERIAL %s\n', cameraInfo.SERIAL);
% fprintf(yaml,'# yaml file auto-generated by : matlabCalibration.m and writeYaml.m\n');
% fprintf(yaml,'# yaml file auto-generated on : %s\n', date);


%%
clc
yaml = fopen("/home/benjamin/ros/data/calibrations/20200117/ugv1/py_vicon_data.py", 'w');

fprintf(yaml,'gator_p = np.array([');
for idx = 1:size(vicon.gatorboard.position.vic, 1)
  p = vicon.gatorboard.position.vic(idx,:);
  fprintf(yaml,'[%6.16f, %6.16f, %6.16f], \\\n', p(1), p(2), p(3));
end
fprintf(yaml,'])\n\n');

fprintf(yaml,'gator_q = np.array([');
for idx = 1:size(vicon.gatorboard.quaternion.vic, 1)
  q = vicon.gatorboard.quaternion.vic(idx,:);
  fprintf(yaml,'[%6.16f, %6.16f, %6.16f, %6.16f], \\\n', q(1), q(2), q(3), q(4));
end
fprintf(yaml,'])\n\n');

fprintf(yaml,'ugv_p = np.array([');
for idx = 1:size(vicon.ugv1.position.vic, 1)
  p = vicon.ugv1.position.vic(idx,:);
  fprintf(yaml,'[%6.16f, %6.16f, %6.16f], \\\n', p(1), p(2), p(3));
end
fprintf(yaml,'])\n\n');

fprintf(yaml,'ugv_q = np.array([');
for idx = 1:size(vicon.ugv1.quaternion.vic, 1)
  q = vicon.ugv1.quaternion.vic(idx,:);
  fprintf(yaml,'[%6.16f, %6.16f, %6.16f, %6.16f], \\\n', q(1), q(2), q(3), q(4));
end
fprintf(yaml,'])\n\n');

fprintf(yaml,'rect_indices = np.array([');
for idx = 1:size(data.rectdata.rect_indices, 1)
  q = data.rectdata.rect_indices(idx,:);
  fprintf(yaml,'[%1.1f], \\\n', q);
end
fprintf(yaml,'])\n\n');

